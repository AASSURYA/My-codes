#include<stdio.h>
struct node
{
  int data;
  struct node* link;
}*top=NULL;
 
//INSERTION AN ELEMENT
void push(int val)
{
  struct node* newNode;
  newNode=(struct node*)malloc(sizeof(struct node));
  newNode->data=val;
  if(top==NULL)
  {
    newNode->link=NULL;
    top=newNode;
  }
  else
   {
     newNode->link=top;
     top= newNode;
   }
  printf("\nElement inserted successfully...\n");
}

//DELETION AN ELEMENT
void pop()
{
  struct node* temp=top;
  if(top==NULL)
   {
    printf("\nStack is empty\n");
   }
  else
   {
     top=temp->link;
    printf("\nElement %d is deleted ...\n",temp->data);
    free(temp);
   }
}
  
//DISPLAY THE ELEMENTS
void display()
{
 struct node* temp=top;
  if(top==NULL)
   {
     printf("\nStack is empty...\n");
   }
  else
   {
      while(temp->link!=NULL)
      {
        printf("%d ", temp->data);
        temp=temp->link;
      }
      printf("%d ",temp->data);
   }
}

int main()
{
    int n,e;
    printf("WELCOME TO STACK IMPLEMENT USING LINKED LIST\n");
    printf("________________________________________\n");
    while(1)
    {
    printf("\nSTACK OPERATIONS \n 1.INSERTION\n 2.DELETION\n 3.DISPLAY\n 4.EXIT\n");
    printf("Choose an option between 1-4:");
    scanf("%d",&n);
    switch(n)
      {
       case 1:
          printf("Enter the element to be inserted:");
        scanf("%d",&e);
        push(e);
        break;
       case 2:
         pop();
         break;
       case 3:
         display();
         break;
       case 4:
          exit(0);
    default: 
        printf("\ninvalid number\n Choose the number between 1 to 4 only:");
          
      }
    }
  }
 